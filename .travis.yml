# Config file for automatic testing at travis-ci.org

# Use container-based infrastructure
# http://docs.travis-ci.com/user/migrating-from-legacy/
sudo: false

language: python

python:
  - "3.4"
  - "2.7"

env:
  global:
    - PYTHONPATH=$TRAVIS_BUILD_DIR
  matrix:
    - DJANGO_VERSION="Django>=1.8,<1.9" DATABASE_URL="postgres://postgres@localhost/postgres"
    - DJANGO_VERSION="Django>=1.8,<1.9" DATABASE_URL="mysql://root@localhost/mysql"
    - DJANGO_VERSION="Django>=1.8,<1.9" DATABASE_URL="sqlite://:memory:"
    - DJANGO_VERSION="Django>=1.7,<1.8" DATABASE_URL="postgres://postgres@localhost/postgres"
    - DJANGO_VERSION="Django>=1.7,<1.8" DATABASE_URL="mysql://root@localhost/mysql"
    - DJANGO_VERSION="Django>=1.7,<1.8" DATABASE_URL="sqlite://:memory:"
    - DJANGO_VERSION="Django>=1.6,<1.7" DATABASE_URL="postgres://postgres@localhost/postgres"
    - DJANGO_VERSION="Django>=1.6,<1.7" DATABASE_URL="mysql://root@localhost/mysql"
    - DJANGO_VERSION="Django>=1.6,<1.7" DATABASE_URL="sqlite://:memory:"
    - DJANGO_VERSION="Django>=1.5,<1.6" DATABASE_URL="postgres://postgres@localhost/postgres"
    - DJANGO_VERSION="Django>=1.5,<1.6" DATABASE_URL="mysql://root@localhost/mysql"
    - DJANGO_VERSION="Django>=1.5,<1.6" DATABASE_URL="sqlite://:memory:"

matrix:
  include:
    - python: "2.6"
      env: DJANGO_VERSION="Django>=1.5,<1.6" DATABASE_URL="postgres://postgres@localhost/postgres"
      env: DJANGO_VERSION="Django>=1.5,<1.6" DATABASE_URL="mysql://root@localhost/mysql"
      env: DJANGO_VERSION="Django>=1.5,<1.6" DATABASE_URL="sqlite://:memory:"
    - python: "2.6"
      env: DJANGO_VERSION="Django>=1.6,<1.7" DATABASE_URL="postgres://postgres@localhost/postgres"
      env: DJANGO_VERSION="Django>=1.6,<1.7" DATABASE_URL="mysql://root@localhost/mysql"
      env: DJANGO_VERSION="Django>=1.6,<1.7" DATABASE_URL="sqlite://:memory:"
    - python: "3.4"
      env: DJANGO_VERSION="pylama"

addons:
  postgresql: "9.4"

# command to install dependencies, e.g. pip install -r requirements.txt --use-mirrors
install:
  - pip install $DJANGO_VERSION
  - pip install -r requirements-test.txt

# command to run tests using coverage, e.g. python setup.py test
script:
  - if [[ $DJANGO_VERSION != 'pylama' ]]; then coverage run --source custom_user `which django-admin.py` test custom_user --settings=test_settings.settings; fi
  - if [[ $DJANGO_VERSION != 'pylama' ]]; then coverage run --append --source custom_user `which django-admin.py` test custom_user --settings=test_settings.settings_subclass; fi
  - if [[ $DJANGO_VERSION == 'pylama' ]]; then pylama; fi

# report coverage to coveralls.io
after_success: coveralls
